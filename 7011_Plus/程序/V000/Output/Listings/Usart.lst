C51 COMPILER V9.57.0.0   USART                                                             05/29/2020 17:28:11 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN ..\Output\Objects\Usart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\User\AppCode\DriverLayer\Usart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.
                    -.\User\AppCode\AppLayer;..\User\AppCode\DriverLayer;..\User\AppCode\ManageLayer;..\User\AppCode\WIFILayer;..\User\SysCod
                    -e\Core) DEBUG OBJECTEXTEND PRINT(..\Output\Listings\Usart.lst) OBJECT(..\Output\Objects\Usart.obj)

line level    source

   1          /******************************************************************************
   2          文件名称: Uart.c
   3          文件标识: STC8F2K64S4
   4          摘    要: Uart硬件操作函数
   5          当前版本: V1.0  
   6          完成日期: 2018.11.18
   7          *******************************************************************************/
   8          #define USER_UART_GLOBALS
   9          #include        "STC8.h"
  10          #include        "Usart.h"
  11          #include        "wifi.h"
  12          
  13          //#define MAIN_Fosc             11059200L       //定义主时钟
  14          #define BaudRate                9600UL  //选择波特率
  15          #define Timer1_Reload   (65536UL -(MAIN_Fosc / 4 / BaudRate))           //Timer 1 重装值， 对应300KHZ
  16          #define Timer2_Reload   (65536UL -(MAIN_Fosc / 4 / BaudRate))           //Timer 2 重装值， 对应300KHZ
  17          
  18          
  19          ///*****************************************************************************
  20          //函数名称 : uart1_init
  21          //功能描述 : uart1初始化
  22          //输入参数 : 无
  23          //返回参数 : 无
  24          //使用说明 : 无
  25          //*****************************************************************************/
  26          //void uart1_init(void)
  27          //{
  28          //      S1_8bit();                                                                                                                                                                                                                              //8位数据
  29          //#ifdef        Debug   
  30          ////    S1_USE_P30P31();                                                                                                                                                                                                        //UART1 使用P30 P31口   默认
  31          //      S1_USE_P36P37();                                                                                                                                                                                                        //UART1 使用P36 P37口   
  32          //#else 
  33          ////    S1_USE_P36P37();                                                                                                                                                                                                        //UART1 使用P36 P37口   
  34          //      S1_USE_P30P31();
  35          //#endif        
  36          //      AUXR &= ~(1<<4);                                                                                                                                                                                                        //Timer stop            波特率使用Timer2产生
  37          //      AUXR |= 0x01;                                                                                                                                                                                                                   //S1 BRT Use Timer2;
  38          //      AUXR |= (1<<2);                                                                                                                                                                                                         //Timer2 set as 1T mode
  39          //      TH2 = (unsigned char)(Timer2_Reload >> 8);
  40          //      TL2 = (unsigned char)(Timer2_Reload);
  41          //      AUXR |=  (1<<4);        //Timer2 run enable
  42          //      REN = 1;        //允许接收
  43          //      ES  = 1;        //允许中断
  44          //      PS  = 0;
  45          //      IPH = 0;//PSH;
  46          //      EA  = 1;                //允许全局中断
  47          //}
  48          
  49          /*****************************************************************************
  50          函数名称 : uart2_init
  51          功能描述 : uart1初始化
  52          输入参数 : 无
  53          返回参数 : 无
C51 COMPILER V9.57.0.0   USART                                                             05/29/2020 17:28:11 PAGE 2   

  54          使用说明 : 无
  55          *****************************************************************************/
  56          //void Uart2Init(void)          //9600bps@11.0592MHz
  57          //{
  58          //      S2CON = 0x50;           //8位数据,可变波特率
  59          //      AUXR &= 0xFB;           //定时器2时钟为Fosc/12,即12T
  60          //      T2L     = 0xE8;           //设定定时初值
  61          //      T2H     = 0xFF;           //设定定时初值
  62          //      AUXR |= 0x10;           //启动定时器2
  63          //      S2_RX_EN();         //允许接收
  64          //      IE2  = ENABLE;  //允许中断
  65          //      NOP1();
  66          //      EA  = ENABLE;           //允许全局中断
  67          //      NOP1();
  68          //}
  69          
  70          void Uart2Init(void)            //9600bps@5.5296MHz
  71          {
  72   1              S2CON = 0x50;           //8位数据,可变波特率
  73   1              AUXR &= 0xFB;           //定时器2时钟为Fosc/12,即12T
  74   1              T2L = 0xF3;             //设定定时初值
  75   1              T2H = 0xFF;             //设定定时初值
  76   1              AUXR |= 0x10;           //启动定时器2
  77   1              S2_RX_EN();         //允许接收
  78   1              IE2  = ENABLE;  //允许中断
  79   1      //      NOP1();
  80   1      //      EA  = ENABLE;           //允许全局中断
  81   1      //      NOP1();
  82   1      }
  83          ///*****************************************************************************
  84          //函数名称 : Uart_PutChar
  85          //功能描述 : 串口发送
  86          //输入参数 : dat:待发送数据
  87          //返回参数 : 无
  88          //使用说明 : 无
  89          //*****************************************************************************/
  90          //void Uart_PutChar(unsigned char dat)
  91          //{
  92          //      SBUF = dat;
  93          //      while(!TI);
  94          //      TI = 0;
  95          //}
  96          /*****************************************************************************
  97          函数名称 : Uart_PutChar
  98          功能描述 : 串口发送
  99          输入参数 : dat:待发送数据
 100          返回参数 : 无
 101          使用说明 : 无
 102          *****************************************************************************/
 103          void Uart_PutChar(unsigned char dat)
 104          {
 105   1              S2BUF = dat;
 106   1              
 107   1              while(!TI2);
 108   1              CLR_TI2();
 109   1      }
 110          ///*****************************************************************************
 111          //函数名称 : Uart1_ISR_Handle
 112          //功能描述 : Uart1串口中断处理函数
 113          //输入参数 : 无
 114          //返回参数 : 无
 115          //使用说明 : 无
C51 COMPILER V9.57.0.0   USART                                                             05/29/2020 17:28:11 PAGE 3   

 116          //*****************************************************************************/
 117          //void Uart1_ISR_Handle (void) interrupt UART1_VECTOR
 118          //{
 119          //      
 120          //      if(RI)
 121          //      {
 122          //              RI      = 0;
 123          //              uart_receive_input(SBUF);       
 124          //      }
 125          //}
 126          /*****************************************************************************
 127          函数名称 : Uart2_ISR_Handle
 128          功能描述 : Uart2串口中断处理函数
 129          输入参数 : 无
 130          返回参数 : 无
 131          使用说明 : 无
 132          *****************************************************************************/
 133          void Uart2_ISR_Handle (void) interrupt UART2_VECTOR
 134          {
 135   1              
 136   1              if(RI2)
 137   1              {
 138   2                      CLR_RI2();
 139   2                      uart_receive_input(S2BUF);      
 140   2              }
 141   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    111    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
