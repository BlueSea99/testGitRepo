C51 COMPILER V9.57.0.0   KEYPROC                                                           06/10/2020 16:31:52 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE KEYPROC
OBJECT MODULE PLACED IN ..\Output\Objects\KeyProc.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\User\AppCode\ManageLayer\KeyProc.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR
                    -(..\User\AppCode\AppLayer;..\User\AppCode\DriverLayer;..\User\AppCode\ManageLayer;..\User\AppCode\WIFILayer;..\User\SysC
                    -ode\Core) DEBUG OBJECTEXTEND PRINT(..\Output\Listings\KeyProc.lst) OBJECT(..\Output\Objects\KeyProc.obj)

line level    source

   1          #include "KeyProc.h"
   2          #include "TypeDef.h"
   3          #include "SysDataDef.h"
   4          #include "LedProc.h"
   5          #include "wifi.h"
   6          
   7           
   8          UI08 KeyScan(void)
   9          {
  10   1              #define KEY_TIME        50
  11   1          
  12   1          static UI08 i = 0;
  13   1              static UI16 Count = 0;
  14   1          static UI08 key_value = 0;
  15   1      //      UI08 key_value = 0;
  16   1          
  17   1          switch(i)
  18   1          {
  19   2              case 0:
  20   2                  if(KEY1 == 0 || KEY2 == 0 || KEY3 == 0)
  21   2                  {
  22   3                      i++;  
  23   3                  }
  24   2                  break;
  25   2              
  26   2              case 1:
  27   2                  if(KEY1 == 0 || KEY2 == 0 || KEY3 == 0)
  28   2                  {
  29   3                      i++;
  30   3                      if(KEY1 == 0)       key_value = 0x01;
  31   3                      else if(KEY2 == 0)      key_value = 0x02;
  32   3                      else if(KEY3 == 0)      key_value = 0x03;
  33   3                  }
  34   2                  else
  35   2                  {
  36   3                      key_value = 0;
  37   3                      i = 0;  
  38   3                  }
  39   2                  
  40   2                  break;
  41   2              
  42   2              case 2:
  43   2                  if(KEY1 == 0 || KEY2 == 0 || KEY3 == 0)    
  44   2                  {}
  45   2                  else    // 表示都弹起来了
  46   2                  {
  47   3                      i = 0;
  48   3                      Count = 0;
  49   3                      
  50   3                      if(key_value == 0x01)       
  51   3                      {
  52   4                          key_value = 0;
  53   4                          return 0x01;
C51 COMPILER V9.57.0.0   KEYPROC                                                           06/10/2020 16:31:52 PAGE 2   

  54   4                      }
  55   3                      else if(key_value == 0x02)      
  56   3                      {
  57   4                          key_value = 0;
  58   4                          return 0x02;
  59   4                      }
  60   3                      else if(key_value == 0x03)      
  61   3                      {
  62   4                          key_value = 0;
  63   4                          return 0x03; 
  64   4                      }
  65   3                  }
  66   2                  
  67   2                  if((++Count) > KEY_TIME)
  68   2                  {
  69   3                      i++;
  70   3                  }
  71   2                  break;
  72   2                  
  73   2              case 3:
  74   2                  if((++Count) >= KEY_TIME)
  75   2                  {
  76   3                      Count = 0;
  77   3      
  78   3                      if(KEY1 == 0)       return 0x11;
  79   3                      else if(KEY2 == 0)      return 0x12;
  80   3                      else if(KEY3 == 0)      return 0x13;
  81   3                      
  82   3                      if(KEY1 == 0 || KEY2 == 0 || KEY3 == 0)
  83   3                      {}
  84   3                      else   // 表示都弹起来了 
  85   3                      {
  86   4                          key_value = 0;
  87   4                          i = 0;
  88   4                          Count = 0;
  89   4                          return 0xFF;
  90   4                      }                
  91   3                  }
  92   2                  break;
  93   2          }
  94   1          
  95   1              return 0;       // 无按键按下
  96   1      }
  97          
  98          /*****************************************************************************
  99          函数名称 : key_scan
 100          功能描述 : 扫描按键
 101          输入参数 : 无
 102          返回参数 : 无
 103          使用说明 : 无
 104          *****************************************************************************/
 105          void KeyProc(void)
 106          {
 107   1          static UI08 time_count = 0;
 108   1              UI08 key;
 109   1          UI08 wifi_state = 0;
 110   1          UI08 temp_value = 0;
 111   1          
 112   1          if(StartUpF)    return;     // 开关开启和关闭时，按键无效
 113   1          
 114   1              key = KeyScan();
 115   1              
C51 COMPILER V9.57.0.0   KEYPROC                                                           06/10/2020 16:31:52 PAGE 3   

 116   1          if(key == 0x00) return;
 117   1          
 118   1              switch(key)
 119   1              {        
 120   2                      // 开关
 121   2                      case 0X01:
 122   2      
 123   2                  if(SwitchF) 
 124   2                  {
 125   3                      ClrSwitchF;
 126   3                      SetStartUpF;
 127   3                      SetDpSwitchF;
 128   3                  }
 129   2                  else
 130   2                  {
 131   3                      SetSwitchF;
 132   3                      SetStartUpF;
 133   3                      SetDpSwitchF;
 134   3                  }
 135   2                  
 136   2      //#ifdef WIFI_TEST_ENABLE               
 137   2      //                mcu_start_wifitest();
 138   2      //#endif            
 139   2                              break;
 140   2              
 141   2              // 长按按键
 142   2              case 0x11:
 143   2                  time_count++;
 144   2                  if(time_count > 250)    time_count = 250;
 145   2              
 146   2                  if(++time_count == 12)    // 
 147   2                  {               
 148   3                      wifi_state = mcu_get_wifi_work_state();  // 获取Wifi状态
 149   3                      
 150   3                      if(wifi_state != SMART_CONFIG_STATE || wifi_state != AP_STATE)
 151   3                      {
 152   4                          mcu_reset_wifi();  // 复位wifi
 153   4                      }
 154   3                      else
 155   3                      {
 156   4                          if(wifi_state == SMART_CONFIG_STATE)
 157   4                          {
 158   5                              mcu_set_wifi_mode(AP_CONFIG);                        
 159   5                          }
 160   4                          else if(wifi_state == AP_STATE)
 161   4                          {
 162   5                              mcu_set_wifi_mode(SMART_CONFIG);
 163   5                          }
 164   4                      }
 165   3                  }
 166   2                  break;
 167   2                      
 168   2                      // 降低亮度按键
 169   2                      case 2:
 170   2                  if(!AdjustLightF)    return;
 171   2              
 172   2              case 0x12:
 173   2                  if(!SwitchF) return;
 174   2                  
 175   2                  SetDimmerKeyF;      // 标志正在进行调灯，3s后进入配网状态
 176   2                  SetDpBrightF;       // 上报APP 调光值 将亮度值传到云服务器中
 177   2                  Face.CtrlTim = 0;
C51 COMPILER V9.57.0.0   KEYPROC                                                           06/10/2020 16:31:52 PAGE 4   

 178   2              
 179   2                  
 180   2                  temp_value = LedShowTrans(Dimmer.FaceValue);
 181   2                  if(--temp_value < 1)  temp_value = 1;
 182   2                  
 183   2                  Dimmer.FaceValue = LightValTab[Dimmer.MinLightVal][temp_value - 1];
 184   2      
 185   2                  break;
 186   2                      
 187   2                      
 188   2              // 增加亮度按键
 189   2                      case 3:
 190   2                  if(!AdjustLightF)    return;
 191   2              
 192   2                      case 0x13:
 193   2                  if(!SwitchF) return;
 194   2                  
 195   2                  SetDimmerKeyF;
 196   2                  SetDpBrightF;       // 上报APP 调光值 将亮度值传到云服务器中
 197   2                  Face.CtrlTim = 0;
 198   2              
 199   2                  temp_value = LedShowTrans(Dimmer.FaceValue);
 200   2                  if(++temp_value > 10)  temp_value = 10;
 201   2                  
 202   2                  Dimmer.FaceValue = LightValTab[Dimmer.MinLightVal][temp_value - 1];         
 203   2                              break;
 204   2                      
 205   2              case 0xFF:
 206   2                  time_count = 0;
 207   2                  break;
 208   2              
 209   2                      default:
 210   2                              break;
 211   2                              
 212   2              }               
 213   1      }
 214          
 215          void ModeKeyProc(void)
 216          {
 217   1          UI08 temp_min = 0;
 218   1          
 219   1          /* 判断亮度等级 */
 220   1          switch(Dimmer.MinLightVal)
 221   1          {
 222   2              case 0:
 223   2                  SetFirstGearF;
 224   2                  ClrSecondGearF;
 225   2                  ClrThirdGearF;
 226   2              
 227   2                  if((FirstGearP != 0) && (SecondGearP == 0 || ThirdGearP == 0))
 228   2                  {
 229   3                      SetDimmerKeyF;
 230   3                      SetDpBrightF;
 231   3                      temp_min = LedShowTrans(Dimmer.FaceValue);
 232   3                      
 233   3                      if(SecondGearP == 0)
 234   3                          Dimmer.MinLightVal = 1;
 235   3                      else
 236   3                          Dimmer.MinLightVal = 2;
 237   3                      
 238   3                      Dimmer.FaceValue = LightValTab[Dimmer.MinLightVal][temp_min - 1]; 
 239   3                  }
C51 COMPILER V9.57.0.0   KEYPROC                                                           06/10/2020 16:31:52 PAGE 5   

 240   2                  break;
 241   2              
 242   2              case 1:
 243   2                  SetThirdGearF;
 244   2                  ClrFirstGearF;
 245   2                  ClrSecondGearF;
 246   2                  
 247   2                  if((SecondGearP != 0) && (FirstGearP == 0 || ThirdGearP == 0))
 248   2                  {
 249   3                      SetDimmerKeyF;
 250   3                      SetDpBrightF;
 251   3                      temp_min = LedShowTrans(Dimmer.FaceValue);
 252   3                      
 253   3                      if(FirstGearP == 0)
 254   3                          Dimmer.MinLightVal = 0;
 255   3                      else
 256   3                          Dimmer.MinLightVal = 2;
 257   3                      
 258   3                      Dimmer.FaceValue = LightValTab[Dimmer.MinLightVal][temp_min - 1]; 
 259   3                  }        
 260   2                  break;
 261   2              
 262   2              case 2:
 263   2                  SetThirdGearF;
 264   2                  ClrFirstGearF;
 265   2                  ClrSecondGearF; 
 266   2              
 267   2                  if((ThirdGearP != 0) && (FirstGearP == 0 || SecondGearP == 0))
 268   2                  {
 269   3                      SetDimmerKeyF;
 270   3                      SetDpBrightF;
 271   3                      temp_min = LedShowTrans(Dimmer.FaceValue);
 272   3                      
 273   3                      if(FirstGearP == 0)
 274   3                          Dimmer.MinLightVal = 0;
 275   3                      else
 276   3                          Dimmer.MinLightVal = 1;
 277   3                      
 278   3                      Dimmer.FaceValue = LightValTab[Dimmer.MinLightVal][temp_min - 1]; 
 279   3                  }        
 280   2                  break;
 281   2              
 282   2              default:
 283   2                  break;
 284   2          }
 285   1          
 286   1          /* 判断可否调光 */
 287   1          if(AdjustLightP)
 288   1          {
 289   2              SetAdjustLightF;
 290   2          }
 291   1          else
 292   1          {
 293   2              ClrAdjustLightF;
 294   2          }
 295   1      }
 296          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    984    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.57.0.0   KEYPROC                                                           06/10/2020 16:31:52 PAGE 6   

   XDATA SIZE       =      5       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
